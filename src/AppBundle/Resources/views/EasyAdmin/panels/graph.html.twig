<script src="{{ asset('js/Chart.bundle.min.js') }}"></script>
<script>
    window.chartColors = {
        red: 'rgb(255, 99, 132)',
        orange: 'rgb(255, 159, 64)',
        yellow: 'rgb(255, 205, 86)',
        green: 'rgb(75, 192, 192)',
        blue: 'rgb(54, 162, 235)',
        purple: 'rgb(153, 102, 255)',
        grey: 'rgb(201, 203, 207)'
    }

    const configuration = {
        type: 'line',
        data: {
            datasets: [{
                label: '',
                data: [],
                backgroundColor: window.chartColors.blue,
                borderColor: window.chartColors.blue,
                borderWidth: 1,
                fill: false,
                yAxisID: 'axis'
            }],
            labels: []
        },
        options: {
            scales: {
                yAxes: [{
                    type: 'linear',
                    display: true,
                    position: 'left',
                    id: 'axis'
                }]
            }
        }
    }

    let chart = null

    $(document).ready(function() {
        const ctx = document.getElementById("canvas").getContext('2d')

        $('[name="attribute"], [name="sensor"]').on('change', function() {
            const attribute = $('[name="attribute"]').val()
            const sensor = $('[name="sensor"]').val()

            if(attribute !== null && sensor !== null) {
                $.ajax({
                    url: '{{ url('graphData') }}',
                    method: 'post',
                    data: {
                        attribute: attribute,
                        sensor: sensor
                    }
                }).then(function (response) {
                    configuration.data.datasets[0].label = attribute + ' of sensor ' + sensor
                    configuration.data.datasets[0].data = []
                    configuration.data.labels = []

                    response.forEach(function(element, index) {
                        configuration.data.datasets[0].data.push(element.value)
                        configuration.data.labels.push(formatDateTime(new Date(element.date.date), new Date(element.time.date), '-'))
                    })

                    chart = new Chart(ctx, Object.assign({}, configuration))
                })
            }
        })
    })

    function formatDateTime(date, time, separator) {
        return  (date.getUTCDate()+1) + '.' + (date.getUTCMonth()+1) + '.' + date.getUTCFullYear() + ' ' +
                separator + ' ' +
                time.getUTCHours() + ':' + time.getUTCMinutes() + ':' + time.getUTCSeconds()
    }
</script>

<div class="col-xs-12 col-md-9">
    <div>
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title inline">History</h3>
                <select class="form-control input-sm inline normal-width pull-right" name="attribute" style="margin-top: -5px">
                    {# All values are mapping to the corresponding database field #}
                    <option value="-1" disabled selected>Choose attribute...</option>
                    <option value="elevation">Elevation</option>
                    <option value="speed">Speed</option>
                    <option value="temp">Temperature</option>
                    <option value="moist">Moist</option>
                    <option value="pressure">Pressure</option>
                    <option value="humidity">Humidity</option>
                    <option value="ADC0">ADC0</option>
                    <option value="ADC1">ADC1</option>
                    <option value="ADC2">ADC2</option>
                    <option value="ADC3">ADC3</option>
                    <option value="ADC4">ADC4</option>
                    <option value="ADC5">ADC5</option>
                    <option value="ADC6">ADC6</option>
                    <option value="ADC7">ADC7</option>
                    <option value="SDSP1">SDSP1 (PM10)</option>
                    <option value="SDSP2">SDSP2 (PM2.5)</option>
                </select>
                <select class="form-control input-sm inline normal-width pull-right" name="sensor" style="margin-top: -5px">
                    <option value="-1" disabled selected>Choose sensor...</option>
                    {% for sensor in sensors %}
                        <option value="{{ sensor.id }}">#{{ sensor.id }} {{ sensor.name }}</option>
                    {% endfor %}
                </select>
            </div>
            <div class="panel-body canvas-wrapper">
                <canvas id="canvas"></canvas>
            </div>
        </div>
    </div>
    <div class = "row">
        {% include 'AppBundle:EasyAdmin:panels/stats.html.twig' with { 'dataCount' : dataCount, 'sensorCount' : sensorCount, 'recentTimestamp': recentTimestamp } %}
    </div>
</div>



