imports:
    - { resource: parameters.yml }
    - { resource: version.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi: ~
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    #serializer: { enable_annotations: true }
    default_locale: '%locale%'
    templating:
        engines: ['twig']
    trusted_hosts: ~
    session:
        cookie_lifetime: 28800
        # https://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id: session.handler.native_file
        save_path: '%kernel.project_dir%/var/sessions/%kernel.environment%'
    fragments: ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'

# Doctrine Configuration
doctrine:
    dbal:
        driver: pdo_sqlite
        path: '%kernel.project_dir%/var/app.db'
        charset: UTF8
        types:
            datetime: AppBundle\Doctrine\DBAL\Types\UTCDateTimeType
            datetimetz: AppBundle\Doctrine\DBAL\Types\UTCDateTimeType

    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool: { type: memory }

assetic:
    debug:          '%kernel.debug%'
    use_controller: '%kernel.debug%'
    filters:
        cssrewrite: ~

easy_admin:
    site_name: 'Sensony'
    formats:
        date: 'd.m.Y'
        time: 'H:i:s'
        datetime: 'd.m.Y H:i'
    design:
        color_scheme: 'dark'
        menu:
            - { label: 'Dashboard', route: 'admin_dashboard', default: true, icon: 'dashboard' }
            - { entity: 'Sensor', icon: 'thermometer-3' }
            - { entity: 'SensorType', icon: 'microchip' }
            - { entity: 'Data', icon: 'database' }
            - { entity: 'User', icon: 'user' }
            - { label: 'Version: 0.0.%version%' }
        assets:
            css: ['/css/admin_dashboard.css', '/css/bootstrap-datetimepicker.min.css']
            js: ['/js/admin_pretty_json.js', '/js/bootstrap-datetimepicker.min.js']
    list:
        actions: ['show', 'edit', 'search', 'delete', 'new']
    entities:
        # List the entity class name you want to manage
        Sensor:
            class: AppBundle\Entity\Sensor
            list:
                fields: ['id', 'name', 'uuid', 'data']
            new:
                fields: ['name', 'description', 'longitude', 'latitude', 'uuid', 'sensorType']
            edit:
                fields: ['name', 'description', 'longitude', 'latitude', 'uuid', 'sensorType', 'token']
        SensorType:
            class: AppBundle\Entity\SensorType
            new:
                fields: ['name', 'description', 'mapping']
            show:
                fields:
                    - name
                    - description
                    - mapping
                    - { property: 'request', css_class: 'request_json', type_options: { disabled: true } }
            edit:
                fields: ['name', 'description', 'mapping', 'request']
        Data:
            class: AppBundle\Entity\Data
            list:
                fields: ['id', 'time', 'date', 'temp', 'pressure', 'sensor']
        User:
            class: AppBundle\Entity\User
            show:
                fields: ['username', 'mail', 'timeToLive', 'role', 'sensors']
            list:
                fields: ['id', 'username', 'mail', 'role']
